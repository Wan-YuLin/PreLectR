% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{LambdaDecision}
\alias{LambdaDecision}
\title{Optimal Lambda Decision}
\usage{
LambdaDecision(TuningRes, PvlSummary, maxdepth = 5, minbucket = 3)
}
\arguments{
\item{TuningRes}{DataFrame. The selected feature profile for each lambda being tested, generated by `LambdaTuning`.}

\item{PvlSummary}{DataFrame. Prevalence distribution for each lambda being tested, generated by `LambdaTuning`.}

\item{maxdepth}{Integer. The maximum depth of the decision tree (default is 5).}

\item{minbucket}{Integer. The minimum number of observations in each segment (default is 3).}
}
\value{
A list containing three elements:
- `opt_lmbd`: The optimal lambda value.
- `selected_lmbd_plot`: A plot of the loss values at each lambda, with segmented regression visualized and the optimal lambda marked by a vertical line.
- `pvl_plot`: A plot of the prevalence distribution of selected features at each lambda.
}
\description{
Determines the optimal lambda value based on the inflection point of the loss curve, which represents the critical balance where the regularization term begins to outweigh the loss term. This function, `LambdaDecision`, finds the inflection point by segmenting the loss curve into n parts through segmented regression.
Segmented regression is implemented using Recursive Partitioning and Regression Trees, selecting the first breakpoint as the optimal lambda.
}
\examples{
set.seed(42)
n_samples <- 10
n_features <- 100

X_raw <- matrix(rnbinom(n_features * n_samples, size = 10, mu = 1), nrow = n_features, ncol = n_samples)
X_scaled <- t(scale(t(X_raw)))  # feature-wise z-standardization
diagnosis <- c('CRC','CRC','control','CRC','control','CRC','control','control','CRC','CRC')

lrange <- AutoScanning(X_scaled, X_raw, diagnosis, task = "classification")

tuning_res <- LambdaTuning(X_scaled, X_raw, diagnosis, lrange, outpath=getwd())

lmbd_picking <- LambdaDecision(tuning_res$TuningResult, tuning_res$PvlDistSummary)

# optimal lambda
lmbd_picking$opt_lmbd

# segmented regression visualization
library(patchwork)
lmbd_picking$selected_lmbd_plot/lmbd_picking$pvl_plot

}
