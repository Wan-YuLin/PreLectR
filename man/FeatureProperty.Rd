% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Visualization.R
\name{FeatureProperty}
\alias{FeatureProperty}
\title{Get the Property for Each Feature}
\usage{
FeatureProperty(X, Y, PreLect_result, task = "classification")
}
\arguments{
\item{X}{Matrix or DataFrame. Raw count data with samples as rows and features as columns.}

\item{Y}{Character or numeric vector. Labels for the data. If `task` is `coxPH`, please provide event labels.}

\item{PreLect_result}{PreLect output.  Lambda value, the intensity of regularization. Strongly suggested to be determined by the `LambdaTuning` process.}

\item{task}{String. Specifies the type of task: either `classification`, `regression`, `multi-class classification`, or `coxPH` (default is `classification`).}
}
\value{
A DataFrame with tendency, mean relative abundance, variance, and prevalence for each feature.
}
\description{
The `FeatureProperty` function retrieves the properties of each feature, allowing users to examine the characteristics of features selected by PreLect.
}
\examples{

set.seed(42)
n_samples <- 10
n_features <- 100

X_raw <- matrix(rnbinom(n_features * n_samples, size = 10, mu = 1), nrow = n_features, ncol = n_samples)
rownames(X_raw) <- paste0('feat',1:n_features)
X_scaled <- t(scale(t(X_raw)))  # feature-wise z-standardization
diagnosis <- c('CRC','CRC','health','CRC','health','CRC','health','health','CRC','CRC')
diagnosis <- factor(diagnosis, levels=c('health', 'CRC')) # assign 'health' as control sample
pvlvec <- GetPrevalence(X_raw)

result <- PreLect(X_scaled, pvlvec, diagnosis, lambda=1e-4, task="classification")
prop <- FeatureProperty(X_raw, diagnosis, result)

}
